'''
Neuron simulator export for:

Components:
    Lavrentovich2008_Ca_Oscillations_0 (Type: Lavrentovich2008_Ca_Oscillations:  vin=0.05 (none) kout=0.5 (none) vM3=40.0 (none) k_CaA=0.15 (none) n=2.02 (none) k_CaI=0.15 (none) m=2.2 (none) kip3=0.1 (none) vM2=15.0 (none) k2=0.1 (none) kf=0.5 (none) vp=0.05 (none) kp=0.3 (none) kdeg=0.08 (none) compartment=1.0 (none) ER=1.0 (none) init_X=0.1 (none) init_Y=1.5 (none) init_Z=0.1 (none) tscale=1.0 (SI per_time))
    sim1 (Type: Simulation:  length=1000.0 (SI time) step=0.01 (SI time))


    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.1.2
         org.neuroml.model   v1.0.7
         jLEMS               v0.9.5.2
'''
import neuron
h = neuron.h
h.load_file("nrngui.hoc")
# Adding simulation Component(id=sim1 type=Simulation) of network/component: Lavrentovich2008_Ca_Oscillations_0 (Type: Lavrentovich2008_Ca_Oscillations:  vin=0.05 (none) kout=0.5 (none) vM3=40.0 (none) k_CaA=0.15 (none) n=2.02 (none) k_CaI=0.15 (none) m=2.2 (none) kip3=0.1 (none) vM2=15.0 (none) k2=0.1 (none) kf=0.5 (none) vp=0.05 (none) kp=0.3 (none) kdeg=0.08 (none) compartment=1.0 (none) ER=1.0 (none) init_X=0.1 (none) init_Y=1.5 (none) init_Z=0.1 (none) tscale=1.0 (SI per_time))
print "Population population_Lavrentovich2008_Ca_Oscillations contains 1 instance(s) of component: Lavrentovich2008_Ca_Oscillations_0 of type: Lavrentovich2008_Ca_Oscillations "

population_Lavrentovich2008_Ca_Oscillations_0 = h.Section()
population_Lavrentovich2008_Ca_Oscillations_0.L = 10.0
population_Lavrentovich2008_Ca_Oscillations_0(0.5).diam = 10.0
population_Lavrentovich2008_Ca_Oscillations_0(0.5).cm = 318.31927
population_Lavrentovich2008_Ca_Oscillations_0.push()
Lavrentovich2008_Ca_Oscillations_population_Lavrentovich2008_Ca_Oscillations_0 = h.Lavrentovich2008_Ca_Oscillations(0.5, sec=population_Lavrentovich2008_Ca_Oscillations_0)

h.Lavrentovich2008_Ca_Oscillations[0].vin = 0.05
h.Lavrentovich2008_Ca_Oscillations[0].kout = 0.5
h.Lavrentovich2008_Ca_Oscillations[0].vM3 = 40.0
h.Lavrentovich2008_Ca_Oscillations[0].k_CaA = 0.15
h.Lavrentovich2008_Ca_Oscillations[0].n = 2.02
h.Lavrentovich2008_Ca_Oscillations[0].k_CaI = 0.15
h.Lavrentovich2008_Ca_Oscillations[0].m = 2.2
h.Lavrentovich2008_Ca_Oscillations[0].kip3 = 0.1
h.Lavrentovich2008_Ca_Oscillations[0].vM2 = 15.0
h.Lavrentovich2008_Ca_Oscillations[0].k2 = 0.1
h.Lavrentovich2008_Ca_Oscillations[0].kf = 0.5
h.Lavrentovich2008_Ca_Oscillations[0].vp = 0.05
h.Lavrentovich2008_Ca_Oscillations[0].kp = 0.3
h.Lavrentovich2008_Ca_Oscillations[0].kdeg = 0.08
h.Lavrentovich2008_Ca_Oscillations[0].compartment = 1.0
h.Lavrentovich2008_Ca_Oscillations[0].ER = 1.0
h.Lavrentovich2008_Ca_Oscillations[0].init_X = 0.1
h.Lavrentovich2008_Ca_Oscillations[0].init_Y = 1.5
h.Lavrentovich2008_Ca_Oscillations[0].init_Z = 0.1
h.Lavrentovich2008_Ca_Oscillations[0].tscale = 0.001
# The following code is based on Andrew's test_HH.py example...
trec = h.Vector()
trec.record(h._ref_t)

# Display: Component(id=disp1 type=Display)
#   Line, recording: X
#   Line, recording: Y
#   Line, recording: Z
h.tstop = 1000000.0

h.dt = 10.0

h.steps_per_ms = 0.1

display_disp1 = h.Graph(0)
display_disp1.size(0,h.tstop,-80.0,50.0)
display_disp1.view(0, -80.0, h.tstop, 130.0, 80, 330, 330, 250)
h.graphList[0].append(display_disp1)
display_disp1.addexpr("Lavrentovich2008_Ca_Oscillations[0].X", "Lavrentovich2008_Ca_Oscillations[0].X", 1, 1, 0.8, 0.9, 2)
display_disp1.addexpr("Lavrentovich2008_Ca_Oscillations[0].Y", "Lavrentovich2008_Ca_Oscillations[0].Y", 2, 1, 0.8, 0.9, 2)
display_disp1.addexpr("Lavrentovich2008_Ca_Oscillations[0].Z", "Lavrentovich2008_Ca_Oscillations[0].Z", 3, 1, 0.8, 0.9, 2)


h.load_file('nrngui.hoc')
h.nrncontrolmenu()
h.run()
print "Done"


[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [
    {email = "info@opensourcebrain.org", name = "Open Source Brain "},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "docker",
    "pyNeuroML[annotations]",
    "pymetadata>=0.4.2",
    "python-libsedml",
    "requests<2.32.0",
    "tellurium==2.2.10",
]
description = "Tests SBML compatibility with BioSimulators registered simulation engines"
dynamic = [
    "version",
]
keywords = ["BioModels", "BioSimulations", "Biosimulators", "SBML", "SED-ML"]
name = "SBMLShowcase"
optional-dependencies = {dev = [
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "tox",
    "twine",
], docs = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
], test = [
    "pytest",
    "pytest-cov",
]}
readme = "README.md"
requires-python = ">=3.9"
license.file = "LICENSE.md"
urls.homepage = "https://github.com/OpenSourceBrain/SBMLShowcase"

[tool.coverage]
report = {sort = "cover"}
run = {branch = true, parallel = true, source = [
    "SBMLShowcase",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--import-mode=importlib",
    "--verbose",
]
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
lint.ignore = [
    "COM812", # trailing commas (ruff-format recommended)
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D407", # removed dashes lines under sections
    "D417", # argument description in docstring (unreliable)
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
]
lint.per-file-ignores = {"tests*" = [
    "INP001", # File is part of an implicit namespace package.
    "S101", # Use of `assert` detected
]}
lint.select = [
    "ALL",
]
lint.isort.known-first-party = [
    "SBMLShowcase",
]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = [
    "classmethod",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/SBMLShowcase/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
overrides."tool.tox.env.docs.commands".inline_arrays = false
overrides."tool.tox.env_run_base.commands".inline_arrays = false

[tool.tox]
env_list = [
    "py310",
    "py311",
    "py312",
    "py313",
    "py39",
]
env_run_base = {commands = [
    [
        "pytest",
        "--cov",
        "--cov-report=xml",
    ],
], extras = [
    "test",
]}
env.docs = {commands = [
    "mkdocs",
    "build",
    "--strict",
], extras = [
    "docs",
]}
gh.python."3.10" = ["py310"]
gh.python."3.11" = ["py311"]
gh.python."3.12" = ["py312"]
gh.python."3.9" = ["py39"]

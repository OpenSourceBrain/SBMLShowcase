{
    "amici": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864df3167dc18b5b2476fe",
        "download": "https://api.biosimulations.org/results/67864df3167dc18b5b2476fe/download",
        "logs": "https://api.biosimulations.org/logs/67864df3167dc18b5b2476fe?includeOutput=true",
        "log_yml": {
            "duration": 0.928141,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    rateRule \"lambda * (phik - n) / taun\" contains an unsupported expression: Sympify of expression 'could not parse 'lambda * (phik - n) / taun'' failed, because of exception being raised:\n    TokenError: Starred arguments in lambda not supported.",
                "type": "CombineArchiveExecutionError"
            },
            "output": "",
            "sedDocuments": [
                {
                    "duration": 0.550258,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  rateRule \"lambda * (phik - n) / taun\" contains an unsupported expression: Sympify of expression 'could not parse 'lambda * (phik - n) / taun'' failed, because of exception being raised:\n  TokenError: Starred arguments in lambda not supported.",
                        "type": "SedmlExecutionError"
                    },
                    "location": "BIOMD0000000138_url.sedml",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  BIOMD0000000138_url.sedml:\r\n    Tasks (1):\r\n      task1\r\n    Reports (1):\r\n      autogen_report_for_task1: 44 data sets\r\n    Plots (1):\r\n      autogen_plot_for_task1: 1 curves\r\n\r\nExecuting SED-ML file 1: BIOMD0000000138_url.sedml ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task1`\r\n    Outputs:\r\n      `autogen_plot_for_task1`\r\n      `autogen_report_for_task1`\r\n  Executing task 1: `task1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `autogen_report_for_task1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `autogen_plot_for_task1` ...",
                    "outputs": [
                        {
                            "dataSets": [
                                {
                                    "id": "autogen_time_for_task1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_c",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vca",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_Cm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gcal",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gsk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ga",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vn",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_va",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sn",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sa",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_taun",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_tauh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_lambda",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_kc",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ks",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ff",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_alpha",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phik",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phia",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phih",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phif",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phical",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_cinf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ica",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_isk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ibk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ikdr",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ia",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ik",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_n",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_h",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_V",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_cell",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_reaction_0000004",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.058551,
                            "exception": null,
                            "id": "autogen_report_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "curves": [
                                {
                                    "id": "autogen_curve_task1_c",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.28067,
                            "exception": null,
                            "id": "autogen_plot_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.095587,
                            "exception": {
                                "message": "rateRule \"lambda * (phik - n) / taun\" contains an unsupported expression: Sympify of expression 'could not parse 'lambda * (phik - n) / taun'' failed, because of exception being raised:\nTokenError: Starred arguments in lambda not supported.",
                                "type": "SBMLException"
                            },
                            "id": "task1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "brian2": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864df5167dc18b5b247701",
        "download": "https://api.biosimulations.org/results/67864df5167dc18b5b247701/download",
        "logs": "https://api.biosimulations.org/logs/67864df5167dc18b5b247701?includeOutput=true",
        "log_yml": {
            "duration": 0.049079,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "bionetgen": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864df7167dc18b5b247704",
        "download": "https://api.biosimulations.org/results/67864df7167dc18b5b247704/download",
        "logs": "https://api.biosimulations.org/logs/67864df7167dc18b5b247704?includeOutput=true",
        "log_yml": {
            "duration": 0.177497,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "boolnet": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864df8ba5a3f02b9f2f1e3",
        "download": "https://api.biosimulations.org/results/67864df8ba5a3f02b9f2f1e3/download",
        "logs": "https://api.biosimulations.org/logs/67864df8ba5a3f02b9f2f1e3?includeOutput=true",
        "log_yml": {
            "duration": 0.184346,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "cbmpy": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864dfa167dc18b5b247707",
        "download": "https://api.biosimulations.org/results/67864dfa167dc18b5b247707/download",
        "logs": "https://api.biosimulations.org/logs/67864dfa167dc18b5b247707?includeOutput=true",
        "log_yml": {
            "duration": 0.255117,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "\r\nINFO: No xlwt module available, Excel spreadsheet creation disabled\r\n\r\n\r\n\r\nNo module named 'cplex'\r\n\r\n\r\n\r\nCPLEX not available\r\n\r\n*****\r\nUsing GLPK\r\n*****\r\n\r\n\r\nINFO: No xlrd module available, Excel spreadsheet reading disabled\r\n\r\nCBMPy environment\r\n******************\r\nRevision: r689\r\n\r\n\r\n***********************************************************************\r\n* Welcome to CBMPy (0.7.25) - PySCeS Constraint Based Modelling       *\r\n*                http://cbmpy.sourceforge.net                         *\r\n* Copyright(C) Brett G. Olivier 2014 - 2019                           *\r\n* Dept. of Systems Bioinformatics                                     *\r\n* Vrije Universiteit Amsterdam, Amsterdam, The Netherlands            *\r\n* CBMPy is developed as part of the BeBasic MetaToolKit Project       *\r\n* Distributed under the GNU GPL v 3.0 licence, see                    *\r\n* LICENCE (supplied with this release) for details                    *\r\n***********************************************************************\r\n\r\n",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "cobrapy": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864dfc167dc18b5b24770c",
        "download": "https://api.biosimulations.org/results/67864dfc167dc18b5b24770c/download",
        "logs": "https://api.biosimulations.org/logs/67864dfc167dc18b5b24770c?includeOutput=true",
        "log_yml": {
            "duration": 0.169123,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "copasi": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864dfe167dc18b5b247711",
        "download": "https://api.biosimulations.org/results/67864dfe167dc18b5b247711/download",
        "logs": "https://api.biosimulations.org/logs/67864dfe167dc18b5b247711?includeOutput=true",
        "log_yml": {
            "duration": 8.410892,
            "exception": null,
            "output": "",
            "sedDocuments": [
                {
                    "duration": 7.952209,
                    "exception": null,
                    "location": "BIOMD0000000138_url.sedml",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  BIOMD0000000138_url.sedml:\r\n    Tasks (1):\r\n      task1\r\n    Reports (1):\r\n      autogen_report_for_task1: 44 data sets\r\n    Plots (1):\r\n      autogen_plot_for_task1: 1 curves\r\n\r\nExecuting SED-ML file 1: BIOMD0000000138_url.sedml ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task1`\r\n    Outputs:\r\n      `autogen_plot_for_task1`\r\n      `autogen_report_for_task1`\r\n  Executing task 1: `task1`\r\n    Executing simulation ...woohoo!\r\n \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `autogen_report_for_task1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `autogen_plot_for_task1` ...",
                    "outputs": [
                        {
                            "dataSets": [
                                {
                                    "id": "autogen_time_for_task1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_c",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vca",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_Cm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gcal",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gsk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ga",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vn",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_va",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sn",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sa",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_taun",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_tauh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_lambda",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_kc",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ks",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ff",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_alpha",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phik",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phia",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phih",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phif",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phical",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_cinf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ica",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_isk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ibk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ikdr",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ia",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ik",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_n",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_h",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_V",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_cell",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_reaction_0000004",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 5.828147,
                            "exception": null,
                            "id": "autogen_report_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "curves": [
                                {
                                    "id": "autogen_curve_task1_c",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.850224,
                            "exception": null,
                            "id": "autogen_plot_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000560",
                            "duration": 1.155574,
                            "exception": null,
                            "id": "task1",
                            "output": "",
                            "simulatorDetails": [
                                {
                                    "key": "methodName",
                                    "value": "lsoda"
                                },
                                {
                                    "key": "parameters",
                                    "value": null
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        }
    },
    "gillespy2": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e00ba5a3f02b9f2f1e9",
        "download": "https://api.biosimulations.org/results/67864e00ba5a3f02b9f2f1e9/download",
        "logs": "https://api.biosimulations.org/logs/67864e00ba5a3f02b9f2f1e9?includeOutput=true",
        "log_yml": {
            "duration": 0.191265,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "ginsim": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e02167dc18b5b247717",
        "download": "https://api.biosimulations.org/results/67864e02167dc18b5b247717/download",
        "logs": "https://api.biosimulations.org/logs/67864e02167dc18b5b247717?includeOutput=true",
        "log_yml": {
            "duration": 0.161988,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "libsbmlsim": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e04ba5a3f02b9f2f1f0",
        "download": "https://api.biosimulations.org/results/67864e04ba5a3f02b9f2f1f0/download",
        "logs": "https://api.biosimulations.org/logs/67864e04ba5a3f02b9f2f1f0?includeOutput=true",
        "log_yml": {
            "duration": 0.167952,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "masspy": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e06167dc18b5b24771d",
        "download": "https://api.biosimulations.org/results/67864e06167dc18b5b24771d/download",
        "logs": "https://api.biosimulations.org/logs/67864e06167dc18b5b24771d?includeOutput=true",
        "log_yml": {
            "duration": 1.127107,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    Something went wrong reading the SBML model. Most likely the SBML model is not valid. Please check that your model is valid using the `mass.io.sbml.validate_sbml_model` function or via the online validator at http://sbml.org/validator .\n    \t`(model, errors) = validate_sbml_model(filename)`\n    If the model is valid and cannot be read please open an issue at https://github.com/SBRG/masspy/issues .",
                "type": "CombineArchiveExecutionError"
            },
            "output": "",
            "sedDocuments": [
                {
                    "duration": 0.690025,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  Something went wrong reading the SBML model. Most likely the SBML model is not valid. Please check that your model is valid using the `mass.io.sbml.validate_sbml_model` function or via the online validator at http://sbml.org/validator .\n  \t`(model, errors) = validate_sbml_model(filename)`\n  If the model is valid and cannot be read please open an issue at https://github.com/SBRG/masspy/issues .",
                        "type": "SedmlExecutionError"
                    },
                    "location": "BIOMD0000000138_url.sedml",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  BIOMD0000000138_url.sedml:\r\n    Tasks (1):\r\n      task1\r\n    Reports (1):\r\n      autogen_report_for_task1: 44 data sets\r\n    Plots (1):\r\n      autogen_plot_for_task1: 1 curves\r\n\r\nExecuting SED-ML file 1: BIOMD0000000138_url.sedml ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task1`\r\n    Outputs:\r\n      `autogen_plot_for_task1`\r\n      `autogen_report_for_task1`\r\n  Executing task 1: `task1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `autogen_report_for_task1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `autogen_plot_for_task1` ...",
                    "outputs": [
                        {
                            "dataSets": [
                                {
                                    "id": "autogen_time_for_task1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_c",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vca",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_Cm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gcal",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gsk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ga",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vn",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_va",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sn",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sa",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_taun",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_tauh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_lambda",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_kc",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ks",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ff",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_alpha",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phik",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phia",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phih",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phif",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phical",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_cinf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ica",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_isk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ibk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ikdr",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ia",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ik",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_n",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_h",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_V",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_cell",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_reaction_0000004",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.179651,
                            "exception": null,
                            "id": "autogen_report_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "curves": [
                                {
                                    "id": "autogen_curve_task1_c",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.278479,
                            "exception": null,
                            "id": "autogen_plot_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.073765,
                            "exception": {
                                "message": "Something went wrong reading the SBML model. Most likely the SBML model is not valid. Please check that your model is valid using the `mass.io.sbml.validate_sbml_model` function or via the online validator at http://sbml.org/validator .\n\t`(model, errors) = validate_sbml_model(filename)`\nIf the model is valid and cannot be read please open an issue at https://github.com/SBRG/masspy/issues .",
                                "type": "MassSBMLError"
                            },
                            "id": "task1",
                            "output": "\u001b[93mWARNING:\u001b[0m \u001b[93mModel does not contain SBML fbc package\u001b[0m\r\n\u001b[93mWARNING:\u001b[0m \u001b[93mModel does not contain SBML groups package\u001b[0m\r\n\u001b[93mWARNING:\u001b[0m \u001b[93mNo key provided for note in Model 'model_0000001'. The note will be added to the notes attribute with key 'NOTES'.\u001b[0m\r\n\u001b[93mWARNING:\u001b[0m \u001b[93mNo key provided for note in Model 'model_0000001'. The note will be added to the notes attribute with key 'NOTES'.\u001b[0m\r\n",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "netpyne": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e07167dc18b5b247726",
        "download": "https://api.biosimulations.org/results/67864e07167dc18b5b247726/download",
        "logs": "https://api.biosimulations.org/logs/67864e07167dc18b5b247726?includeOutput=true",
        "log_yml": {
            "duration": 0.051417,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "neuron": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e09ba5a3f02b9f2f213",
        "download": "https://api.biosimulations.org/results/67864e09ba5a3f02b9f2f213/download",
        "logs": "https://api.biosimulations.org/logs/67864e09ba5a3f02b9f2f213?includeOutput=true",
        "log_yml": {
            "duration": 0.047247,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "opencor": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e0a1f52f47f628b57b6",
        "download": "https://api.biosimulations.org/results/67864e0a1f52f47f628b57b6/download",
        "logs": "https://api.biosimulations.org/logs/67864e0a1f52f47f628b57b6?includeOutput=true",
        "log_yml": {
            "duration": 0.050846,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "/home/opencor/OpenCOR/python/lib/python3.7/site-packages/biosimulators_utils/warnings.py:31: SedmlFeatureNotSupportedWarning: \u001b[33m`/tmp/tmpiy7l0iq_/./BIOMD0000000138_url.sedml` is encoded using L1V4. Only features available in L1V3 are supported. Newer features such as simple repeated tasks are not yet supported.\u001b[0m\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\n",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "pyneuroml": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e0c1f52f47f628b57bf",
        "download": "https://api.biosimulations.org/results/67864e0c1f52f47f628b57bf/download",
        "logs": "https://api.biosimulations.org/logs/67864e0c1f52f47f628b57bf?includeOutput=true",
        "log_yml": {
            "duration": 0.048989,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "pysces": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e0eba5a3f02b9f2f230",
        "download": "https://api.biosimulations.org/results/67864e0eba5a3f02b9f2f230/download",
        "logs": "https://api.biosimulations.org/logs/67864e0eba5a3f02b9f2f230?includeOutput=true",
        "log_yml": {
            "duration": 3.560239,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    <class 'AttributeError'>:'PysMod' object has no attribute 'lambda'",
                "type": "CombineArchiveExecutionError"
            },
            "output": "libtk8.6.so: cannot open shared object file: No such file or directory\r\n\r\nPySCeS defaults to matplotlib's TKagg backend if not specified                          in the user configuration file, set \"matplotlib_backend = <backend>\" \r\nMatplotlib interface loaded (pysces.plt.m)\r\nPitcon routines available\r\nNLEQ2 routines available\r\nSBML support available\r\nYou are using NumPy (2.1.2) with SciPy (1.14.1)\r\nAssimulo CVode available\r\nRateChar is available\r\nParallel scanner is available\r\n\r\nPySCeS environment\r\n******************\r\npysces.model_dir = /home/FCAM/crbmapi/Pysces/psc\r\npysces.output_dir = /home/FCAM/crbmapi/Pysces\r\n\r\n\r\n***********************************************************************\r\n* Welcome to PySCeS (1.2.2) - Python Simulator for Cellular Systems   *\r\n*                http://pysces.sourceforge.net                        *\r\n* Copyright(C) B.G. Olivier, J.M. Rohwer, J.-H.S. Hofmeyr, 2004-2024  *\r\n* Triple-J Group for Molecular Cell Physiology                        *\r\n* Stellenbosch University, ZA and VU University Amsterdam, NL         *\r\n* PySCeS is distributed under the PySCeS (BSD style) licence, see     *\r\n* LICENCE.txt (supplied with this release) for details                *\r\n* Please cite PySCeS with: doi:10.1093/bioinformatics/bti046          *\r\n***********************************************************************\r\n",
            "sedDocuments": [
                {
                    "duration": 3.268038,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  <class 'AttributeError'>:'PysMod' object has no attribute 'lambda'",
                        "type": "SedmlExecutionError"
                    },
                    "location": "BIOMD0000000138_url.sedml",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  BIOMD0000000138_url.sedml:\r\n    Tasks (1):\r\n      task1\r\n    Reports (1):\r\n      autogen_report_for_task1: 44 data sets\r\n    Plots (1):\r\n      autogen_plot_for_task1: 1 curves\r\n\r\nExecuting SED-ML file 1: BIOMD0000000138_url.sedml ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task1`\r\n    Outputs:\r\n      `autogen_plot_for_task1`\r\n      `autogen_report_for_task1`\r\n  Executing task 1: `task1`\r\n    Executing simulation ...Check SBML support is at action level 2\r\nSBML file is L2V1\r\nlambda is a reserved symbol, replacing with Lambda\r\n\r\n*******************************************************************\r\nIssues encountered in SBML translation (model processed anyway)\r\nSBML source: /tmp/tmp3gil0fk3.xml\r\n*******************************************************************\r\n\r\nReserved symbol lambda replaced with Lambda \r\n\r\n*******************************************************************\r\n\r\nInfo: single compartment model: locating \"reaction_0000004\" in default compartment\r\nWriting file: /tmp/tmpp7d4rg7y.psc\r\n\r\nSBML2PSC\r\nin : /tmp/tmp3gil0fk3.xml\r\nout: /tmp/tmpp7d4rg7y.psc\r\nUsing model directory: /home/FCAM/crbmapi/Pysces/psc\r\n/tmp/tmpp7d4rg7y.psc loading ..... \r\nParsing file: /tmp/tmpp7d4rg7y.psc\r\nInfo: No reagents have been fixed\r\nInfo: \"vca\" has been initialised but does not occur in a rate equation\r\nInfo: \"vk\" has been initialised but does not occur in a rate equation\r\nInfo: \"Cm\" has been initialised but does not occur in a rate equation\r\nInfo: \"gk\" has been initialised but does not occur in a rate equation\r\nInfo: \"gcal\" has been initialised but does not occur in a rate equation\r\nInfo: \"gsk\" has been initialised but does not occur in a rate equation\r\nInfo: \"ga\" has been initialised but does not occur in a rate equation\r\nInfo: \"gf\" has been initialised but does not occur in a rate equation\r\nInfo: \"vn\" has been initialised but does not occur in a rate equation\r\nInfo: \"va\" has been initialised but does not occur in a rate equation\r\nInfo: \"vm\" has been initialised but does not occur in a rate equation\r\nInfo: \"vh\" has been initialised but does not occur in a rate equation\r\nInfo: \"vf\" has been initialised but does not occur in a rate equation\r\nInfo: \"sn\" has been initialised but does not occur in a rate equation\r\nInfo: \"sa\" has been initialised but does not occur in a rate equation\r\nInfo: \"sm\" has been initialised but does not occur in a rate equation\r\nInfo: \"sh\" has been initialised but does not occur in a rate equation\r\nInfo: \"sf\" has been initialised but does not occur in a rate equation\r\nInfo: \"taun\" has been initialised but does not occur in a rate equation\r\nInfo: \"tauh\" has been initialised but does not occur in a rate equation\r\nInfo: \"Lambda\" has been initialised but does not occur in a rate equation\r\nInfo: \"ks\" has been initialised but does not occur in a rate equation\r\nInfo: \"phik\" has been initialised but does not occur in a rate equation\r\nInfo: \"phia\" has been initialised but does not occur in a rate equation\r\nInfo: \"phih\" has been initialised but does not occur in a rate equation\r\nInfo: \"phif\" has been initialised but does not occur in a rate equation\r\nInfo: \"phical\" has been initialised but does not occur in a rate equation\r\nInfo: \"cinf\" has been initialised but does not occur in a rate equation\r\nInfo: \"isk\" has been initialised but does not occur in a rate equation\r\nInfo: \"ibk\" has been initialised but does not occur in a rate equation\r\nInfo: \"ikdr\" has been initialised but does not occur in a rate equation\r\nInfo: \"ia\" has been initialised but does not occur in a rate equation\r\nInfo: \"ik\" has been initialised but does not occur in a rate equation\r\nInfo: \"n\" has been initialised but does not occur in a rate equation\r\nInfo: \"h\" has been initialised but does not occur in a rate equation\r\nInfo: \"V\" has been initialised but does not occur in a rate equation\r\n \r\nCalculating L matrix . . . . . . .  done.\r\nCalculating K matrix . . . . . . . no flux conservation\r\n done.\r\n \r\n\r\nAssignment rule(s) detected.\r\nRate rule(s) detected.\r\nINFO: RateRules detected and Assimulo installed,\r\nswitching to CVODE (mod.mode_integrator='CVODE').\r\n\r\nINFO: Assignment Rules detected and Assimulo installed,\r\nswitching to CVODE (mod.mode_integrator='CVODE').\r\n\r\nCVODE time for 30001 points: 1.5136682987213135\r\nRateRules evaluated and added to mod.data_sim.\r\n \u001b[31mfailed - 'PysMod' object has no attribute 'lambda'\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `autogen_report_for_task1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `autogen_plot_for_task1` ...",
                    "outputs": [
                        {
                            "dataSets": [
                                {
                                    "id": "autogen_time_for_task1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_c",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vca",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_Cm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gcal",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gsk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ga",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_gf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vn",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_va",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_vf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sn",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sa",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sm",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_sf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_taun",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_tauh",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_lambda",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_kc",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ks",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ff",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_alpha",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phik",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phia",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phih",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phif",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_phical",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_cinf",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ica",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_isk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ibk",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ikdr",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ia",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_ik",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_n",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_h",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_V",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_cell",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "autogen_task1_reaction_0000004",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.058535,
                            "exception": null,
                            "id": "autogen_report_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "curves": [
                                {
                                    "id": "autogen_curve_task1_c",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.299191,
                            "exception": null,
                            "id": "autogen_plot_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 2.78261,
                            "exception": {
                                "message": "'PysMod' object has no attribute 'lambda'",
                                "type": "AttributeError"
                            },
                            "id": "task1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "rbapy": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e0f1f52f47f628b57ca",
        "download": "https://api.biosimulations.org/results/67864e0f1f52f47f628b57ca/download",
        "logs": "https://api.biosimulations.org/logs/67864e0f1f52f47f628b57ca?includeOutput=true",
        "log_yml": {
            "duration": 0.192293,
            "exception": {
                "message": "`/root/archive.omex` is not a valid COMBINE/OMEX archive.\n  - The SED-ML file at location `./BIOMD0000000138_url.sedml` is invalid.\n    - Simulation `auto_ten_seconds` is invalid.\n      - Algorithm has an invalid KiSAO id `KISAO_0000694`.",
                "type": "ValueError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "smoldyn": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e11167dc18b5b24776f",
        "download": "https://api.biosimulations.org/results/67864e11167dc18b5b24776f/download",
        "logs": "https://api.biosimulations.org/logs/67864e11167dc18b5b24776f?includeOutput=true",
        "log_yml": {
            "duration": 0.05768,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    },
    "tellurium": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e12167dc18b5b247774",
        "download": "https://api.biosimulations.org/results/67864e12167dc18b5b247774/download",
        "logs": "https://api.biosimulations.org/logs/67864e12167dc18b5b247774?includeOutput=true",
        "log_yml": {
            "duration": 7.92626,
            "exception": null,
            "output": "",
            "sedDocuments": [
                {
                    "duration": 7.550539,
                    "exception": null,
                    "location": "BIOMD0000000138_url.sedml",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  BIOMD0000000138_url.sedml:\r\n    Tasks (1):\r\n      task1\r\n    Reports (1):\r\n      autogen_report_for_task1: 44 data sets\r\n    Plots (1):\r\n      autogen_plot_for_task1: 1 curves\r\n\r\nExecuting SED-ML file 1: BIOMD0000000138_url.sedml ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task1`\r\n    Outputs:\r\n      `autogen_plot_for_task1`\r\n      `autogen_report_for_task1`\r\n  Executing task 1: `task1`\r\n    Executing simulation ... \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `autogen_report_for_task1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `autogen_plot_for_task1` ...",
                    "outputs": [
                        {
                            "dataSets": [
                                {
                                    "id": "autogen_time_for_task1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_c",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vca",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_Cm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gcal",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gsk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ga",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vn",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_va",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sn",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sa",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_taun",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_tauh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_lambda",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_kc",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ks",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ff",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_alpha",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phik",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phia",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phih",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phif",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phical",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_cinf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ica",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_isk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ibk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ikdr",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ia",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ik",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_n",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_h",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_V",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_cell",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_reaction_0000004",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 6.04438,
                            "exception": null,
                            "id": "autogen_report_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "curves": [
                                {
                                    "id": "autogen_curve_task1_c",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.979144,
                            "exception": null,
                            "id": "autogen_plot_for_task1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000019",
                            "duration": 0.391823,
                            "exception": null,
                            "id": "task1",
                            "output": "",
                            "simulatorDetails": [
                                {
                                    "key": "method",
                                    "value": "simulate"
                                },
                                {
                                    "key": "solver",
                                    "value": "cvode"
                                },
                                {
                                    "key": "relative_tolerance",
                                    "value": 1e-06
                                },
                                {
                                    "key": "absolute_tolerance",
                                    "value": 1e-12
                                },
                                {
                                    "key": "stiff",
                                    "value": true
                                },
                                {
                                    "key": "maximum_bdf_order",
                                    "value": 5
                                },
                                {
                                    "key": "maximum_adams_order",
                                    "value": 12
                                },
                                {
                                    "key": "maximum_num_steps",
                                    "value": 20000
                                },
                                {
                                    "key": "maximum_time_step",
                                    "value": 0.0
                                },
                                {
                                    "key": "minimum_time_step",
                                    "value": 0.0
                                },
                                {
                                    "key": "initial_time_step",
                                    "value": 0.0
                                },
                                {
                                    "key": "multiple_steps",
                                    "value": false
                                },
                                {
                                    "key": "variable_step_size",
                                    "value": false
                                },
                                {
                                    "key": "max_output_rows",
                                    "value": 100000
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        }
    },
    "vcell": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e16167dc18b5b247785",
        "download": "https://api.biosimulations.org/results/67864e16167dc18b5b247785/download",
        "logs": "https://api.biosimulations.org/logs/67864e16167dc18b5b247785?includeOutput=true",
        "log_yml": {
            "duration": 11,
            "exception": null,
            "output": "Processing BIOMD0000000138_url.sedml.  Done",
            "sedDocuments": [
                {
                    "duration": null,
                    "exception": null,
                    "location": "BIOMD0000000138_url.sedml",
                    "output": "Initializing SED-ML document... done. Successful translation of SED-ML file. Building solvers and starting simulation of all tasks... Generating outputs... Generating CSV file... Done. Generating HDF5 file...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "autogen_curve_task1_c",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": null,
                            "exception": null,
                            "id": "autogen_plot_for_task1",
                            "output": null,
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "autogen_time_for_task1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_c",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vca",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_Cm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gcal",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gsk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ga",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_gf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vn",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_va",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_vf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sn",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sa",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sm",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_sf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_taun",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_tauh",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_lambda",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_kc",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ks",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ff",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_alpha",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phik",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phia",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phih",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phif",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_phical",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_cinf",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ica",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_isk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ibk",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ikdr",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ia",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_ik",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_n",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_h",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_V",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_cell",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "autogen_task1_reaction_0000004",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": null,
                            "exception": null,
                            "id": "autogen_report_for_task1",
                            "output": null,
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000019",
                            "duration": 1,
                            "exception": null,
                            "id": "task1",
                            "output": "Initializing simulation job 0 ... done. Starting simulation... done.",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        }
    },
    "xpp": {
        "response": 201,
        "view": "https://api.biosimulations.org/runs/67864e18ba5a3f02b9f2f25f",
        "download": "https://api.biosimulations.org/results/67864e18ba5a3f02b9f2f25f/download",
        "logs": "https://api.biosimulations.org/logs/67864e18ba5a3f02b9f2f25f?includeOutput=true",
        "log_yml": {
            "duration": 0.049439,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        }
    }
}
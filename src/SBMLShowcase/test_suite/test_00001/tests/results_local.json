{
    "amici": {
        "exception_message": "",
        "log_yml": {
            "duration": 13.818715,
            "exception": null,
            "output": "",
            "sedDocuments": [
                {
                    "duration": 13.449346,
                    "exception": null,
                    "location": "tmp811582",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp811582:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp811582 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.302491,
                            "exception": null,
                            "id": "plot_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.059278,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000496",
                            "duration": 13.007085,
                            "exception": null,
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": [
                                {
                                    "key": "solver",
                                    "value": "amici.amici.CVodeSolver"
                                },
                                {
                                    "key": "method",
                                    "value": "amici.swig_wrappers.runAmiciSimulation"
                                },
                                {
                                    "key": "arguments",
                                    "value": {}
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {}
    },
    "brian2": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/brian2' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.044848,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "bionetgen": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/bionetgen' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.594759,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    Language for model `model_1` is not supported.\n      - Model language `urn:sedml:language:sbml` is not supported. Models must be in BNGL format (e.g., `sed:model/@language` must match `^urn:sedml:language:bngl(\\.|$)` such as `urn:sedml:language:bngl`).",
                "type": "CombineArchiveExecutionError"
            },
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp988585` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.381339,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  Language for model `model_1` is not supported.\n    - Model language `urn:sedml:language:sbml` is not supported. Models must be in BNGL format (e.g., `sed:model/@language` must match `^urn:sedml:language:bngl(\\.|$)` such as `urn:sedml:language:bngl`).",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp988585",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp988585:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp988585 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.23277,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.053348,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.024301,
                            "exception": {
                                "message": "Language for model `model_1` is not supported.\n  - Model language `urn:sedml:language:sbml` is not supported. Models must be in BNGL format (e.g., `sed:model/@language` must match `^urn:sedml:language:bngl(\\.|$)` such as `urn:sedml:language:bngl`).",
                                "type": "ValueError"
                            },
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "boolnet": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/boolnet' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.69579,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    Simulation `simulation_1` is invalid.\n      - Number of points (50) must be equal to the difference between the output end (5.0) and start times (0.0).",
                "type": "CombineArchiveExecutionError"
            },
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` may be invalid.\r\n    - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n        \r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        \r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n        \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive may be invalid.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp53487` may be invalid.\r\n    - Model `model_1` may be invalid.\r\n      - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n          \r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n          \r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n          \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.446622,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  Simulation `simulation_1` is invalid.\n    - Number of points (50) must be equal to the difference between the output end (5.0) and start times (0.0).",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp53487",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp53487:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp53487 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.245291,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.080641,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.027814,
                            "exception": {
                                "message": "Simulation `simulation_1` is invalid.\n  - Number of points (50) must be equal to the difference between the output end (5.0) and start times (0.0).",
                                "type": "ValueError"
                            },
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "cbmpy": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/cbmpy' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.748348,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    UniformTimeCourseSimulation `simulation_1` is not supported.\n      - Simulation simulation_1 of type `UniformTimeCourseSimulation` is not supported. Simulation must be an instance of one of the following:\n          - SteadyStateSimulation",
                "type": "CombineArchiveExecutionError"
            },
            "output": "\r\nINFO: No xlwt module available, Excel spreadsheet creation disabled\r\n\r\n\r\n\r\nNo module named 'cplex'\r\n\r\n\r\n\r\nCPLEX not available\r\n\r\n*****\r\nUsing GLPK\r\n*****\r\n\r\n\r\nINFO: No xlrd module available, Excel spreadsheet reading disabled\r\n\r\nCBMPy environment\r\n******************\r\nRevision: r689\r\n\r\n\r\n***********************************************************************\r\n* Welcome to CBMPy (0.7.25) - PySCeS Constraint Based Modelling       *\r\n*                http://cbmpy.sourceforge.net                         *\r\n* Copyright(C) Brett G. Olivier 2014 - 2019                           *\r\n* Dept. of Systems Bioinformatics                                     *\r\n* Vrije Universiteit Amsterdam, Amsterdam, The Netherlands            *\r\n* CBMPy is developed as part of the BeBasic MetaToolKit Project       *\r\n* Distributed under the GNU GPL v 3.0 licence, see                    *\r\n* LICENCE (supplied with this release) for details                    *\r\n***********************************************************************\r\n\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp540272` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.429501,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  UniformTimeCourseSimulation `simulation_1` is not supported.\n    - Simulation simulation_1 of type `UniformTimeCourseSimulation` is not supported. Simulation must be an instance of one of the following:\n        - SteadyStateSimulation",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp540272",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp540272:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp540272 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.222311,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.074812,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.027258,
                            "exception": {
                                "message": "UniformTimeCourseSimulation `simulation_1` is not supported.\n  - Simulation simulation_1 of type `UniformTimeCourseSimulation` is not supported. Simulation must be an instance of one of the following:\n      - SteadyStateSimulation",
                                "type": "ValueError"
                            },
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "cobrapy": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/cobrapy' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.694191,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    UniformTimeCourseSimulation `simulation_1` is not supported.\n      - Simulation simulation_1 of type `UniformTimeCourseSimulation` is not supported. Simulation must be an instance of one of the following:\n          - SteadyStateSimulation",
                "type": "CombineArchiveExecutionError"
            },
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp350278` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.479208,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  UniformTimeCourseSimulation `simulation_1` is not supported.\n    - Simulation simulation_1 of type `UniformTimeCourseSimulation` is not supported. Simulation must be an instance of one of the following:\n        - SteadyStateSimulation",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp350278",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp350278:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp350278 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.252165,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.075008,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.027248,
                            "exception": {
                                "message": "UniformTimeCourseSimulation `simulation_1` is not supported.\n  - Simulation simulation_1 of type `UniformTimeCourseSimulation` is not supported. Simulation must be an instance of one of the following:\n      - SteadyStateSimulation",
                                "type": "ValueError"
                            },
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "copasi": {
        "exception_message": "",
        "log_yml": {
            "duration": 0.956492,
            "exception": null,
            "output": "/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp631552` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.713249,
                    "exception": null,
                    "location": "tmp631552",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp631552:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp631552 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.43638,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.063252,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000560",
                            "duration": 0.077077,
                            "exception": null,
                            "id": "task_1",
                            "output": "/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33m- Variable `S2_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_c` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_c` has warnings.\r\n  - XPath could not be validated.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mModel `model_1` may be invalid.\r\n  - The model file `/tmp/tmppaqyzgwl/./00001-sbml-l3v2.xml` has warnings.\r\n    - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n    - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n    - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n    - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n    - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.10/site-packages/kisao/utils.py:518: AlgorithmSubstitutedWarning: \u001b[33m'LSODA/LSODAR hybrid method' (KISAO_0000560) will be substituted for 'CVODE' (KISAO_0000019) at substitution policy 'SIMILAR_VARIABLES'.\u001b[0m\r\n  warnings.warn(termcolor.colored(msg, 'yellow'), AlgorithmSubstitutedWarning)\r\n",
                            "simulatorDetails": [
                                {
                                    "key": "methodName",
                                    "value": "lsoda"
                                },
                                {
                                    "key": "parameters",
                                    "value": null
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {}
    },
    "gillespy2": {
        "exception_message": "",
        "log_yml": {
            "duration": 0.742031,
            "exception": null,
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp648143` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.485189,
                    "exception": null,
                    "location": "tmp648143",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp648143:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp648143 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.256301,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.074649,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000088",
                            "duration": 0.059144,
                            "exception": null,
                            "id": "task_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33m- Variable `S2_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_c` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_c` has warnings.\r\n  - XPath could not be validated.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/kisao/utils.py:477: AlgorithmSubstitutedWarning: \u001b[33m'LSODA' (KISAO_0000088) will be substituted for 'CVODE'' (KISAO_0000019) at substitution policy 'SIMILAR_VARIABLES'.\u001b[0m\r\n  warnings.warn(termcolor.colored(msg, 'yellow'), AlgorithmSubstitutedWarning)\r\n",
                            "simulatorDetails": [
                                {
                                    "key": "method",
                                    "value": "gillespy2.solvers.numpy.ode_solver.ODESolver"
                                },
                                {
                                    "key": "arguments",
                                    "value": {
                                        "integrator": "lsoda"
                                    }
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {}
    },
    "ginsim": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/ginsim' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.683852,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    Simulation `simulation_1` is invalid.\n      - The interval between the output start and time time must be an integer multiple of the number of steps, not `0.1`:\n          Output start time: 0.0\n          Output end time: 5.0\n          Number of steps: 50",
                "type": "CombineArchiveExecutionError"
            },
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` may be invalid.\r\n    - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n        \r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        \r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n        \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive may be invalid.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp580995` may be invalid.\r\n    - Model `model_1` may be invalid.\r\n      - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n          \r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n          \r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n          \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.475243,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  Simulation `simulation_1` is invalid.\n    - The interval between the output start and time time must be an integer multiple of the number of steps, not `0.1`:\n        Output start time: 0.0\n        Output end time: 5.0\n        Number of steps: 50",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp580995",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp580995:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp580995 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.255357,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.078094,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.029888,
                            "exception": {
                                "message": "Simulation `simulation_1` is invalid.\n  - The interval between the output start and time time must be an integer multiple of the number of steps, not `0.1`:\n      Output start time: 0.0\n      Output end time: 5.0\n      Number of steps: 50",
                                "type": "ValueError"
                            },
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "libsbmlsim": {
        "exception_message": "",
        "log_yml": {
            "duration": 0.73631,
            "exception": null,
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` may be invalid.\r\n    - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n        \r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        \r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n        \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive may be invalid.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp381524` may be invalid.\r\n    - Model `model_1` may be invalid.\r\n      - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n          \r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n          \r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n          \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.507922,
                    "exception": null,
                    "location": "tmp381524",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp381524:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp381524 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.281388,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.06572,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000086",
                            "duration": 0.068531,
                            "exception": null,
                            "id": "task_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33m- Variable `S2_1_c` may be invalid.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_c` may be invalid.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_s` may be invalid.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_s` may be invalid.\r\n  - XPath could not be validated.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mModel `model_1` may be invalid.\r\n  - The model file `/tmp/tmpg89e49mk/./00001-sbml-l3v2.xml` may be invalid.\r\n    - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n      \r\n    - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n       The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      \r\n    - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n      Reference: L3V2 Section 4.7.3\r\n       The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      \r\n    - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n       The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      \r\n    - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n       The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n      \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/kisao/utils.py:477: AlgorithmSubstitutedWarning: \u001b[33m'Fehlberg method' (KISAO_0000086) will be substituted for 'CVODE'' (KISAO_0000019) at substitution policy 'SIMILAR_VARIABLES'.\u001b[0m\r\n  warnings.warn(termcolor.colored(msg, 'yellow'), AlgorithmSubstitutedWarning)\r\n",
                            "simulatorDetails": [
                                {
                                    "key": "method",
                                    "value": "simulateSBMLFromFile"
                                },
                                {
                                    "key": "arguments",
                                    "value": {
                                        "dt": 0.001,
                                        "method": 51,
                                        "print_amount": 0,
                                        "print_interval": 100,
                                        "sim_time": 5.0,
                                        "use_lazy_method": 0
                                    }
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {}
    },
    "masspy": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/masspy' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.814264,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    Something went wrong reading the SBML model. Most likely the SBML model is not valid. Please check that your model is valid using the `mass.io.sbml.validate_sbml_model` function or via the online validator at http://sbml.org/validator .\n    \t`(model, errors) = validate_sbml_model(filename)`\n    If the model is valid and cannot be read please open an issue at https://github.com/SBRG/masspy/issues .",
                "type": "CombineArchiveExecutionError"
            },
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mBioSimulatorsWarning\u001b[0m: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mBioSimulatorsWarning\u001b[0m: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp200766` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n",
            "sedDocuments": [
                {
                    "duration": 0.480301,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  Something went wrong reading the SBML model. Most likely the SBML model is not valid. Please check that your model is valid using the `mass.io.sbml.validate_sbml_model` function or via the online validator at http://sbml.org/validator .\n  \t`(model, errors) = validate_sbml_model(filename)`\n  If the model is valid and cannot be read please open an issue at https://github.com/SBRG/masspy/issues .",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp200766",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp200766:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp200766 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.235328,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mIllogicalVizWarning\u001b[0m: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mIllogicalVizWarning\u001b[0m: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mIllogicalVizWarning\u001b[0m: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mIllogicalVizWarning\u001b[0m: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.077089,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.047222,
                            "exception": {
                                "message": "Something went wrong reading the SBML model. Most likely the SBML model is not valid. Please check that your model is valid using the `mass.io.sbml.validate_sbml_model` function or via the online validator at http://sbml.org/validator .\n\t`(model, errors) = validate_sbml_model(filename)`\nIf the model is valid and cannot be read please open an issue at https://github.com/SBRG/masspy/issues .",
                                "type": "MassSBMLError"
                            },
                            "id": "task_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mBioSimulatorsWarning\u001b[0m: \u001b[33m- Variable `S2_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_c` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_c` has warnings.\r\n  - XPath could not be validated.\u001b[0m\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31 \u001b[1;31mBioSimulatorsWarning\u001b[0m: \u001b[33mModel `model_1` may be invalid.\r\n  - The model file `/tmp/tmpioe5hny7/./00001-sbml-l3v2.xml` has warnings.\r\n    - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n    - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n    - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n    - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n    - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n\u001b[93mWARNING:\u001b[0m \u001b[93mSBML model is written as Level 3 Version 2, will attempt to convert the SBML model from Level 3 Version 2 to Level 3 Version 1 before parsing\u001b[0m\r\n",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "netpyne": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/netpyne' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.041916,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "neuron": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/neuron' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.21166,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "opencor": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/opencor' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.017511,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "pyneuroml": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/pyneuroml' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.029192,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "pysces": {
        "exception_message": "",
        "log_yml": {
            "duration": 0.757966,
            "exception": null,
            "output": "/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp528163` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.544817,
                    "exception": null,
                    "location": "tmp528163",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp528163:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp528163 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ...Check SBML support is at action level 2\r\nSBML file is L3V2\r\nInfo: single compartment model: locating \"reaction1\" in default compartment\r\nWriting file: /tmp/tmpmgwhqumd.psc\r\n\r\nSBML2PSC\r\nin : /tmp/tmph861ccmu.xml\r\nout: /tmp/tmpmgwhqumd.psc\r\nUsing model directory: /Pysces/psc\r\n/tmp/tmpmgwhqumd.psc loading ..... \r\nParsing file: /tmp/tmpmgwhqumd.psc\r\nInfo: No reagents have been fixed\r\n \r\nCalculating L matrix . . . . . . .  done.\r\nCalculating K matrix . . . . . . . no flux conservation\r\n done.\r\n \r\nCVODE time for 51 points: 0.002928495407104492\r\n \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.341442,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.06037,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000019",
                            "duration": 0.070238,
                            "exception": null,
                            "id": "task_1",
                            "output": "/usr/local/lib/python3.10/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33m- Variable `S1_1_c` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_c` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_s` has warnings.\r\n  - XPath could not be validated.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "simulatorDetails": [
                                {
                                    "key": "method",
                                    "value": "pysces.PyscesModel.Simulate"
                                },
                                {
                                    "key": "arguments",
                                    "value": {
                                        "cvode_abstol": 1e-09,
                                        "cvode_access_solver": true,
                                        "cvode_h0": 0.0,
                                        "cvode_hmax": 0.0,
                                        "cvode_hmin": 0.0,
                                        "cvode_mxord": 5,
                                        "cvode_mxstep": 5000,
                                        "cvode_reltol": 1e-09,
                                        "cvode_return_event_timepoints": false,
                                        "cvode_stats": false,
                                        "cvode_track_assignment_rules": true
                                    }
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {}
    },
    "rbapy": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/rbapy' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.639504,
            "exception": {
                "message": "The COMBINE/OMEX did not execute successfully:\n\n  The SED document did not execute successfully:\n  \n    Language for model `model_1` is not supported.\n      - Model language `urn:sedml:language:sbml` is not supported. Models must be in RBA format (e.g., `sed:model/@language` must match `^urn:sedml:language:rba(\\.|$)` such as `urn:sedml:language:rba`).",
                "type": "CombineArchiveExecutionError"
            },
            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` may be invalid.\r\n    - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n        \r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        \r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        \r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n        \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning: \u001b[33mThe COMBINE/OMEX archive may be invalid.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp353552` may be invalid.\r\n    - Model `model_1` may be invalid.\r\n      - The model file `00001-sbml-l3v2.xml` may be invalid.\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions. \r\n          \r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n          \r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n          \r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\r\n          \u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
            "sedDocuments": [
                {
                    "duration": 0.434659,
                    "exception": {
                        "message": "The SED document did not execute successfully:\n\n  Language for model `model_1` is not supported.\n    - Model language `urn:sedml:language:sbml` is not supported. Models must be in RBA format (e.g., `sed:model/@language` must match `^urn:sedml:language:rba(\\.|$)` such as `urn:sedml:language:rba`).",
                        "type": "SedmlExecutionError"
                    },
                    "location": "tmp353552",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp353552:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp353552 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[31mfailed\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[36mqueued\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.259768,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the X axis because the X data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent x axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n/usr/local/lib/python3.9/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning: \u001b[33mCurves have inconsistent y axis scales. All curves will be plotted in linear scale.\u001b[0m\r\n  warnings.warn(termcolor.colored(message, Colors.warning.value), category)\r\n",
                            "skipReason": null,
                            "status": "SKIPPED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SKIPPED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SKIPPED"
                                }
                            ],
                            "duration": 0.069207,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SKIPPED"
                        }
                    ],
                    "skipReason": null,
                    "status": "FAILED",
                    "tasks": [
                        {
                            "algorithm": null,
                            "duration": 0.024658,
                            "exception": {
                                "message": "Language for model `model_1` is not supported.\n  - Model language `urn:sedml:language:sbml` is not supported. Models must be in RBA format (e.g., `sed:model/@language` must match `^urn:sedml:language:rba(\\.|$)` such as `urn:sedml:language:rba`).",
                                "type": "ValueError"
                            },
                            "id": "task_1",
                            "output": "",
                            "simulatorDetails": null,
                            "skipReason": null,
                            "status": "FAILED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    },
    "smoldyn": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/smoldyn' returned non-zero exit status 1",
        "log_yml": {},
        "detailed_error_log": {}
    },
    "tellurium": {
        "exception_message": "",
        "log_yml": {
            "duration": 0.884219,
            "exception": null,
            "output": "/usr/local/lib/python3.11/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning:\r\n\r\n\u001b[33mThe SED document is potentially incorrect.\r\n  - Model `model_1` has warnings.\r\n    - The model file `00001-sbml-l3v2.xml` has warnings.\r\n      - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n        - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n      - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n        - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n           The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n        - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n          Reference: L3V2 Section 4.7.3\r\n           The <parameter> with id 'k1' does not have a 'units' attribute.\r\n      - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n        - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n           The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n      - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n        - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n           The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n\r\n/usr/local/lib/python3.11/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning:\r\n\r\n\u001b[33mThe COMBINE/OMEX archive has warnings.\r\n  - OMEX manifests should not contain content entries for themselves.\r\n  - The SED-ML file at location `./tmp841971` has warnings.\r\n    - Model `model_1` has warnings.\r\n      - The model file `00001-sbml-l3v2.xml` has warnings.\r\n        - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n          - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n        - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n          - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n             The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n          - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n            Reference: L3V2 Section 4.7.3\r\n             The <parameter> with id 'k1' does not have a 'units' attribute.\r\n        - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n          - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n             The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n        - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n          - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n             The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n\r\n",
            "sedDocuments": [
                {
                    "duration": 0.524635,
                    "exception": null,
                    "location": "tmp841971",
                    "output": "Archive contains 1 SED-ML documents with 1 models, 1 simulations, 1 tasks, 1 reports, and 1 plots:\r\n  tmp841971:\r\n    Tasks (1):\r\n      task_1\r\n    Reports (1):\r\n      report_1: 3 data sets\r\n    Plots (1):\r\n      plot_1: 2 curves\r\n\r\nExecuting SED-ML file 1: tmp841971 ...\r\n  Found 1 tasks and 2 outputs:\r\n    Tasks:\r\n      `task_1`\r\n    Outputs:\r\n      `plot_1`\r\n      `report_1`\r\n  Executing task 1: `task_1`\r\n    Executing simulation ... \u001b[34msucceeded\u001b[0m\r\n    Generating 2 outputs ...\r\n      Generating output 1: `plot_1` ... \u001b[34msucceeded\u001b[0m\r\n      Generating output 2: `report_1` ...",
                    "outputs": [
                        {
                            "curves": [
                                {
                                    "id": "c_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "c_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.307494,
                            "exception": null,
                            "id": "plot_1",
                            "output": "/usr/local/lib/python3.11/site-packages/biosimulators_utils/warnings.py:31: IllogicalVizWarning:\r\n\r\n\u001b[33mA title could not be inferred for the Y axis because the Y data generators have inconsistent names.\u001b[0m\r\n\r\n",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        },
                        {
                            "dataSets": [
                                {
                                    "id": "ds_time",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S1_1",
                                    "status": "SUCCEEDED"
                                },
                                {
                                    "id": "ds_S2_1",
                                    "status": "SUCCEEDED"
                                }
                            ],
                            "duration": 0.061085,
                            "exception": null,
                            "id": "report_1",
                            "output": "",
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ],
                    "skipReason": null,
                    "status": "SUCCEEDED",
                    "tasks": [
                        {
                            "algorithm": "KISAO_0000019",
                            "duration": 0.070795,
                            "exception": null,
                            "id": "task_1",
                            "output": "/usr/local/lib/python3.11/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning:\r\n\r\n\u001b[33m- Variable `S2_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_s` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S1_1_c` has warnings.\r\n  - XPath could not be validated.\r\n- Variable `S2_1_c` has warnings.\r\n  - XPath could not be validated.\u001b[0m\r\n\r\n/usr/local/lib/python3.11/site-packages/biosimulators_utils/warnings.py:31: BioSimulatorsWarning:\r\n\r\n\u001b[33mModel `model_1` may be invalid.\r\n  - The model file `/tmp/tmpvz8_1b4y/./00001-sbml-l3v2.xml` has warnings.\r\n    - 1 warning of type SBML unit consistency (99507). The following is the first warning at line 3, column 2:\r\n      - In situations where a mathematical expression refers to extent, the units of extent should be consistent with the global extent units of the model. In models where the 'extentUnits' attribute has not been declared, libSBML does not yet have the functionality to verify accurately the consistency of the units in such expressions.\r\n    - 1 warning of type SBML unit consistency (99508). The following is the first warning at line 29, column 6:\r\n      - In situations where a mathematical expression refers to a compartment, species or parameter, it is necessary to know the units of the object to establish unit consistency. In models where the units of an object have not been declared, libSBML does not yet have the functionality to accurately verify the consistency of the units in mathematical expressions referring to that object. \r\n         The units of the <parameter> 'k1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n    - 1 warning of type SBML unit consistency (20702). The following is the first warning at line 29, column 6:\r\n      - If the attribute 'units' on a given Parameter object has not been set, then the unit of measurement associated with that parameter's value is undefined.\r\n        Reference: L3V2 Section 4.7.3\r\n         The <parameter> with id 'k1' does not have a 'units' attribute.\r\n    - 1 warning of type SBML unit consistency (99505). The following is the first warning at line 39, column 8:\r\n      - In situations where a mathematical expression contains literal numbers or parameters whose units have not been declared, it is not possible to verify accurately the consistency of the units in the expression. \r\n         The units of the <kineticLaw> <math> expression 'compartment * k1 * S1' cannot be fully checked. Unit consistency reported as either no errors or further unit errors related to this object may not be accurate.\r\n    - 1 warning of type Modeling practice (80701). The following is the first warning at line 29, column 6:\r\n      - As a principle of best modeling practice, the units of a <parameter> should be declared rather than be left undefined. Doing so improves the ability of software to check the consistency of units and helps make it easier to detect potential errors in models.\r\n         The <parameter> with the id 'k1' does not have a 'units' attribute.\u001b[0m\r\n\r\n",
                            "simulatorDetails": [
                                {
                                    "key": "method",
                                    "value": "simulate"
                                },
                                {
                                    "key": "solver",
                                    "value": "cvode"
                                },
                                {
                                    "key": "relative_tolerance",
                                    "value": 1e-06
                                },
                                {
                                    "key": "absolute_tolerance",
                                    "value": 1e-12
                                },
                                {
                                    "key": "stiff",
                                    "value": true
                                },
                                {
                                    "key": "maximum_bdf_order",
                                    "value": 5
                                },
                                {
                                    "key": "maximum_adams_order",
                                    "value": 12
                                },
                                {
                                    "key": "maximum_num_steps",
                                    "value": 20000
                                },
                                {
                                    "key": "maximum_time_step",
                                    "value": 0.0
                                },
                                {
                                    "key": "minimum_time_step",
                                    "value": 0.0
                                },
                                {
                                    "key": "initial_time_step",
                                    "value": 0.0
                                },
                                {
                                    "key": "multiple_steps",
                                    "value": false
                                },
                                {
                                    "key": "variable_step_size",
                                    "value": false
                                },
                                {
                                    "key": "max_output_rows",
                                    "value": 100000
                                }
                            ],
                            "skipReason": null,
                            "status": "SUCCEEDED"
                        }
                    ]
                }
            ],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {}
    },
    "vcell": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/vcell' returned non-zero exit status 1",
        "log_yml": {
            "duration": 2,
            "exception": null,
            "output": "Processing tmp674758.  Done",
            "sedDocuments": [],
            "skipReason": null,
            "status": "SUCCEEDED"
        },
        "detailed_error_log": {
            "status": "FAIL",
            "error_message": "Runtime Exception"
        }
    },
    "xpp": {
        "exception_message": "Command '-i '/root/in/00001-sbml-l3v2-sedml.omex' -o /root/out' in image 'ghcr.io/biosimulators/xpp' returned non-zero exit status 1",
        "log_yml": {
            "duration": 0.032264,
            "exception": {
                "message": "No module named 'libsbml'",
                "type": "ModuleNotFoundError"
            },
            "output": "",
            "sedDocuments": [],
            "skipReason": null,
            "status": "FAILED"
        },
        "detailed_error_log": {}
    }
}